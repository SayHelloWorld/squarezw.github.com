<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Tips | square's blog]]></title>
  <link href="http://doruby.com/blog/categories/tips/atom.xml" rel="self"/>
  <link href="http://doruby.com/"/>
  <updated>2013-11-20T16:32:06+08:00</updated>
  <id>http://doruby.com/</id>
  <author>
    <name><![CDATA[square]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[点击阴影区关闭打开的Modal View Controller]]></title>
    <link href="http://doruby.com/blog/2013/01/24/close-modal-view-controller-by-tap-the-shadown-region/"/>
    <updated>2013-01-24T11:03:00+08:00</updated>
    <id>http://doruby.com/blog/2013/01/24/close-modal-view-controller-by-tap-the-shadown-region</id>
    <content type="html"><![CDATA[<p>参考：<a href="http://mengxiangping.com/?p=121">Close Modal View Controller by tap the shadow region</a></p>

<p>如何实现用户点击阴影区域，将当前出现的ModalViewController消失
<img src="/assets/modalViewC.png" alt="modal view controller" /></p>

<p>首先了解一下: UIApplicationMain</p>

<p>``` objc
int main(int argc, char *argv[])
{</p>

<pre><code>@autoreleasepool { 
    return UIApplicationMain(argc, argv, nil, NSStringFromClass([AppDelegate class])); 
} 
</code></pre>

<p>}
```</p>

<p>argc 与 argv 是标准的c main 函数参数。 第三个参数是接收事件响应的主要对象(principalClassName)，如果存在的话必须是继承UIApplication, 第四个 delegateClassName, 实现 UIApplicationDelegate 中的协议方法.</p>

<p>任何时刻你点击屏幕，principalClassName都会监听, 并执行sendEvent方法, 所以我们只要拦截这个方法，然后做我们想做的事情就可以了。</p>

<h2>实现</h2>

<!-- more -->


<p><strong>测试环境：iOS5, iPad</strong></p>

<p>改变main的第三个参数对象为 我们自己定义的一个 MyAppplication 类。</p>

<p>main.m
``` objc
int main(int argc, char *argv[])
{
  @autoreleasepool {</p>

<pre><code>return UIApplicationMain(argc, argv, @"MyApplication", NSStringFromClass([AppDelegate class]));
</code></pre>

<p>  }
}
```</p>

<p>.h file
``` objc</p>

<h1>import &lt;Foundation/Foundation.h></h1>

<p>@interface MyApplication : UIApplication</p>

<p>@end
```</p>

<p>.m file
``` objc</p>

<h1>import "MyApplication.h"</h1>

<p>@implementation MyApplication</p>

<p>-(void)sendEvent:(UIEvent *)event{</p>

<p>  [super sendEvent:event];</p>

<p>  // 关键是在这里拿到点击事件后,如果判断点击的是阴影区, 阴影区的View 是一个私有类, 名字叫UIDimmingView, 所以如果响应的点击事件是在这个View上的，我们就可以关闭当前的ModalView
  UITouch* touch = [[[event allTouches] allObjects] lastObject];</p>

<p>  if ([NSStringFromClass([[touch view] class]) isEqualToString:@"UIDimmingView"]) {</p>

<pre><code>  UIViewController * vc = [[[self keyWindow] rootViewController] presentedViewController]; // 找到正在显示的控制器
  [vc dismissModalViewControllerAnimated:YES];
</code></pre>

<p>  }
}</p>

<p>@end
```</p>
]]></content>
  </entry>
  
</feed>
